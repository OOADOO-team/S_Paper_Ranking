name: Random testing for security: blackbox vs. whitebox fuzzingurl: http://www.researchgate.net/publication/240449142_Random_testing_for_security_blackbox_vs._whitebox_fuzzingpublic_in: International Workshop on Random Testing: Co-located with the IEEE/ACM International Conference on Automated Software Engineeringauthors: Patrice Godefroid,abstract: Fuzz testing is an effective technique for finding security vulnerabilities in software. Fuzz testing is a form of blackbox random testing which randomly mutates well-formed inputs and tests the program on the resulting data. In some cases, grammars are used to randomly generate the well-formed inputs. This also allows the tester to encode application-specific knowledge (such as corner cases of particular interest) as part of the grammar, and to specify test heuristics by assigning probabilistic weights to production rules. Although fuzz testing can be remarkably effective, the limitations of blackbox random testing are well-known. For instance, the then branch of the conditional statement &quot;if (x==10) then&quot; has only one in 232 chances of being exercised if x is a randomly chosen 32-bit input value. This intuitively explains why random testing usually provides low code coverage. Recently, we have proposed an alternative approach of whitebox fuzz testing [4], building upon recent advances in dynamic symbolic execution and test generation [2]. Starting with a well-formed input, our approach symbolically executes the program dynamically and gathers constraints on inputs from conditional statements encountered along the way. The collected constraints are then systematically negated and solved with a constraint solver, yielding new inputs that exercise different execution paths in the program. This process is repeated using a novel search algorithm with a coverage-maximizing heuristic designed to find defects as fast as possible in large search spaces. For example, symbolic execution of the above code fragment on the input x = 0 generates the constraint x &amp;#8800; 10. Once this constraint is negated and solved, it yields x = 10, which gives us a new input that causes the program to follow the then branch of the given conditional statement. We have implemented this approach in SAGE (Scalable, Automated, Guided Execution), a tool based on x86 instruction-level tracing and emulation for whitebox fuzzing of file-reading Windows applications. While still in an early stage of development and deployment, SAGE has already discovered more than 30 new bugs in large shipped Windows applications including image processors, media players and file decoders. Several of these bugs are potentially exploitable memory access violations. In this talk, I will briefly review blackbox fuzzing for security testing. Then, I will present an overview of our recent work on whitebox fuzzing [4] (joint work with Michael Y. Levin and David Molnar), with an emphasis on the key algorithms and techniques needed to make this approach effective and scalable (see also [1, 3]).citations_number: 56Citation: An empirical study of the robustness of Inter-component Communication in Android "Amiya K. Maji" "Fahad A. Arshad" "Saurabh Bagchi" "Jan S. Rellermeyer" http://xueshu.baidu.com/usercenter/paper/show?paperid=20c4386d8df215423c697e1e83435351An empirical investigation into branch coverage for C programs using CUTE and AUSTIN "Kiran Lakhotia" "Phil McMinn" "Mark Harman" http://xueshu.baidu.com/usercenter/paper/show?paperid=2480c9b5681891e156906da4d1be0534Automated Test Data Generation for Coverage: Haven't We Solved This Problem Yet? "Kiran Lakhotia" "Phil McMinn" "Mark Harman" http://xueshu.baidu.com/usercenter/paper/show?paperid=80e6bfb19212a79870ec9c9d6caa0514Centroidal Voronoi Tessellations- A New Approach to Random Testing "A. Shahbazi" "A. F. Tappenden" "J. Miller" http://xueshu.baidu.com/usercenter/paper/show?paperid=fa839c79117ff870dc709d9d7afb651d模糊测试技术研究 "" "" "" "" http://xueshu.baidu.com/usercenter/paper/show?paperid=839d3173d660edeb089ef30ea27615df软件漏洞分析技术进展 "吴世忠" "郭涛" "董国伟" "王嘉捷" http://xueshu.baidu.com/usercenter/paper/show?paperid=e50ab359a50d7b7942a160f2b1d1cf0eA Hybrid Approach for Control Flow Graph Construction from Binary Code "Minh Hai Nguyen" "Thien Binh Nguyen" "Thanh Tho Quan" "Mizuhito Ogawa" http://xueshu.baidu.com/usercenter/paper/show?paperid=36f958a4a4ac36f0c05b29e4721d8effAutomated Security Test Approach for SIP-based VoIP Softphones "Stefan Taber" "Christian Schanes" "Clemens Hlauschek" "Florian Fankhauser" "Thomas Grechenig" http://xueshu.baidu.com/usercenter/paper/show?paperid=333e3c40cf54f593a560d332cbc3f299一种缓冲区溢出漏洞自动挖掘及漏洞定位技术 "" http://xueshu.baidu.com/usercenter/paper/show?paperid=6afe5afdba6c86e7942162a8dbe8d252Hidden Markov Models for Automated Protocol Learning "Sean Whalen" "Matt Bishop" "James P. Crutchfield" http://xueshu.baidu.com/usercenter/paper/show?paperid=a34dfbf4ae28d374fc58c7662042e287References: Compositional dynamic test generation "Goldbart, Paul" "Refael, Gil" "Pekker, David" http://xueshu.baidu.com/usercenter/paper/show?paperid=cc0b3758afbba87ceb910cd354a67987Compositional dynamic test generation "Patrice Godefroid" http://xueshu.baidu.com/usercenter/paper/show?paperid=1379473baaa26362089d4fe9ba9f724e